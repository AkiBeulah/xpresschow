{"version":3,"sources":["services/auth.service.js","pages/Carousel.js","pages/Instructions.js","services/auth-header.js","services/user.service.js","Home.js","components/profile.component.js","components/vendor.component.js","services/checkout.service.js","components/checkout.component.js","pages/Footer.js","components/login.component.js","components/register.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","credential","password","user","axios","post","qs","stringify","then","resp","data","token","localStorage","setItem","JSON","removeItem","email","first_name","last_name","phone_number","getItem","Carousel","objectFit","className","type","name","id","value","checked","htmlFor","data-hover","Item","src","alt","style","Component","Instructions","authHeader","get","loc","params","location","vendor","a","headers","Home","props","updateLocation","setState","UserService","getFilteredVendors","state","response","content","error","message","toString","vendorRedirect","history","push","window","reload","parse","AuthService","getCurrentUser","currentUser","this","getPublicContent","prevProps","vendorCard","width","vendorCard2","vendors","Object","keys","forEach","key","settings","arrows","variableWidth","dots","infinite","speed","slidesToScroll","Navbar","expand","bg","variant","NavDropdown","color","title","onClick","Divider","map","m","Card","vendorname","Img","logo","Body","Title","company_name","company_branch","Text","rating","fontSize","slice","Profile","handleScroll","event","scrollTop","scrollY","scrollOffset","lastOrder","orders","getUserProfile","last_order","orderRecords","order_records","addEventListener","removeEventListener","values","undefined","scrollTargetIds","offset","activeNavClass","scrollDuration","headerBackground","href","ListGroup","Row","Col","md","length","o","parseFloat","price","toFixed","Image","sample","thumbnail","i","payment_method","dispatched","created_at","paid","delivered","getTotal","b","cart","parseInt","itemCount","addToCart","meal","arr","targetNumber","concat","close","targetIncrement","targetDecrement","show","innerWidth","height","innerHeight","modal","order","target","nextProps","getVendor","match","meals","tags","modalShow","updateCart","maxWidth","maxHeight","minWidth","vendorHeader","background","Modal","onHide","size","aria-labelledby","centered","available","desc","Footer","Button","icon","faMinus","faPlus","disabled","sticky","t","Dropdown","alignRight","Toggle","Badge","badgeContent","faShoppingCart","Menu","Header","xs","toCheckout","block","marginBottom","marginLeft","tag","border","c","d","e","f","g","user_id","vendor_id","placeOrder","showModal","pop","CheckoutService","location1","location2","paymentMethod","placeOrderData","onChangeLocation1","onChangeLocation2","onChangePaymentMethod","total","Accordion","defaultActiveKey","as","eventKey","Collapse","placeholder","autocomplete","onChange","required","role","Login","handleLogin","bind","onChangeCredential","onChangePassword","loading","preventDefault","form","validateAll","checkBtn","context","_errors","login","hideModal","resMessage","onSubmit","ref","validations","display","readOnly","isEmail","vpassword","Register","handleRegister","onChangeFirstName","onChangeLastName","onChangePhoneNumber","onChangeEmail","successful","register","App","placedOrderData","logOut","logout","pushState","minHeight","position","Tabs","Tab","collapseOnSelect","Brand","aria-controls","Nav","Link","exact","path","render","component","Test","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0f1c9125.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst API_URL = `https://xpresschow-api.herokuapp.com/api/v1/`\r\n// const API_URL = `http://localhost:3001/api/v1/`\r\n\r\nclass AuthService {\r\n  login(credential, password) {\r\n    const user = {\r\n      credential: credential,\r\n      password: password\r\n    }\r\n\r\n    return axios.post(API_URL + 'user/login', qs.stringify(user))\r\n      .then(resp => {\r\n        if (resp.data.token) {\r\n          localStorage.setItem(\"token\", resp.data.token)\r\n          localStorage.setItem(\"user\", JSON.stringify(resp.data.user))\r\n        }\r\n\r\n        return resp.data\r\n      })\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"token\")\r\n    localStorage.removeItem(\"user\")\r\n  }\r\n\r\n  register(email, password, first_name, last_name, phone_number) {\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      phone_number: phone_number\r\n    }\r\n    return axios.post(API_URL + `users`, qs.stringify(user))\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return localStorage.getItem(\"user\")\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport Car from 'react-bootstrap/Carousel'\r\n\r\nexport default class Carousel extends Component {\r\n  render() {\r\n    const objectFit = { objectFit: 'cover' }\r\n    return (\r\n      <>\r\n        <div className=\"carousel-height w-100 car-overlay\">\r\n          <div className=\"w-50 car-form-title\">\r\n            Where are you?\r\n          </div>\r\n          <div className=\"w-50\">\r\n            <div className=\"location-buttons\">\r\n              <div className=\"location-button\">\r\n                <input className=\"location-button-radio\" type=\"radio\" name=\"location\" id=\"location-1\" value=\"abuja\" checked />\r\n                <label className=\"for-location-button-radio\" htmlFor=\"location-1\">\r\n                  <span data-hover=\"Abuja\">Abuja</span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"location-button\">\r\n                <input className=\"location-button-radio\" type=\"radio\" name=\"location\" value=\"covenant-university\" id=\"location-2\" />\r\n                <label className=\"for-location-button-radio\" htmlFor=\"location-2\">\r\n                  <span data-hover=\"Covenant University\">Covenant University</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Car>\r\n          <Car.Item>\r\n            <img\r\n              className=\"d-block carousel-height w-100\"\r\n              src=\"https://i.ibb.co/cLwRBdD/img1.jpg\"\r\n              alt=\"First slide\"\r\n              style={objectFit}\r\n            />\r\n          </Car.Item>\r\n          <Car.Item>\r\n            <img\r\n              className=\"d-block carousel-height w-100\"\r\n              src=\"https://i.ibb.co/FsTNSrF/img2.jpg\"\r\n              alt=\"Third slide\"\r\n              style={objectFit}\r\n            />\r\n          </Car.Item>\r\n          <Car.Item>\r\n            <img\r\n              className=\"d-block carousel-height w-100\"\r\n              src=\"https://i.ibb.co/rKjh4h3/img3.jpg\"\r\n              alt=\"Third slide\"\r\n              style={objectFit}\r\n            />\r\n          </Car.Item>\r\n        </Car>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Instructions extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"\">\r\n          <div className=\"container\">\r\n            <div className=\"section-title-font display-2\">\r\n              How it works?\r\n                </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"col text-center bg-danger instruction instruction-1\">\r\n              <i className=\"instruction-icon fas fa-concierge-bell\"></i> Choose meal\r\n                    </div>\r\n            <div className=\"col text-center bg-warning instruction instruction-2\">\r\n              <i className=\"instruction-icon fas fa-handshake\"></i>Place order\r\n                    </div>\r\n            <div className=\"col text-center bg-success  instruction instruction-3\">\r\n              <i className=\"instruction-icon fas fa-money-bill-wave\"></i>Pay\r\n                    </div>\r\n          </div>\r\n          <div className=\"col text-center instruction instruction-4 rainbow-bg\">\r\n            <i className=\"instruction-icon fas fa-truck\"></i>\r\n                    Then we bring the food to you to enjoy...\r\n                </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","export default function authHeader() {\r\n  const user = localStorage.getItem('user');\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (user && token) {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': \"\" + token\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n}","import axios from 'axios';\r\n\r\nimport authHeader from \"./auth-header\"\r\n\r\nconst API_URL = 'https://xpresschow-api.herokuapp.com/api/v1/';\r\n// const API_URL = `http://localhost:3001/api/v1/`\r\n\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'vendors')\r\n  }\r\n\r\n  getFilteredVendors(loc) {\r\n    return axios.get(API_URL + 'f_vendor', {\r\n      params: {\r\n        location: loc\r\n      }\r\n    })\r\n  }\r\n\r\n  getVendor(vendor) {\r\n    return axios.get(API_URL + 'vendors/' + vendor)\r\n  }\r\n\r\n  getUserProfile(a) {\r\n    return axios.get(API_URL + `users/${a}`, {\r\n      headers: authHeader()\r\n    })\r\n  }\r\n\r\n  getOrderRecord(a) {\r\n    return axios.get(API_URL + `orders/${a}`, {\r\n      headers: authHeader()\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default new UserService();","import React, { Component } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Carousel from './pages/Carousel'\r\nimport Instructions from './pages/Instructions'\r\nimport UserService from \"./services/user.service\"\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (JSON.parse(AuthService.getCurrentUser())) {\r\n      var user = JSON.parse(AuthService.getCurrentUser())\r\n      var loc = user.location\r\n    } else {\r\n      user = \"\"\r\n      loc = \"\"\r\n    }\r\n\r\n    this.state = {\r\n      content: \"\",\r\n      currentUser: user,\r\n      location: loc\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.currentUser.location) {\r\n      UserService.getFilteredVendors(this.state.currentUser.location)\r\n        .then(\r\n          response => {\r\n            this.setState({\r\n              content: response.data,\r\n            });\r\n          },\r\n          error => {\r\n            this.setState({\r\n              content:\r\n                (error.response && error.response.data) ||\r\n                error.message ||\r\n                error.toString()\r\n            });\r\n          }\r\n        );\r\n    } else {\r\n      if (!this.state.location === \"\") {\r\n        UserService.getFilteredVendors(this.state.location)\r\n          .then(\r\n            response => {\r\n              this.setState({\r\n                content: response.data,\r\n              });\r\n            },\r\n            error => {\r\n              this.setState({\r\n                content:\r\n                  (error.response && error.response.data) ||\r\n                  error.message ||\r\n                  error.toString()\r\n              });\r\n            }\r\n          );\r\n      } else {\r\n        UserService.getPublicContent().then(\r\n          response => {\r\n            this.setState({\r\n              content: response.data,\r\n            });\r\n          },\r\n          error => {\r\n            this.setState({\r\n              content:\r\n                (error.response && error.response.data) ||\r\n                error.message ||\r\n                error.toString()\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.state.location !== prevProps.location) {\r\n      \r\n    }\r\n  }\r\n\r\n  updateLocation = (loc) => {\r\n    localStorage.setItem(\"location\", loc);\r\n    this.setState({\r\n      location: loc\r\n    });\r\n    UserService.getFilteredVendors(this.state.location)\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            content: response.data,\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            content:\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString()\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  vendorRedirect = (loc) => {\r\n    this.props.history.push(`/vendor/${loc}`)\r\n    window.location.reload()\r\n  }\r\n\r\n  render() {\r\n    const vendorCard = { width: \"15rem\" }\r\n    const vendorCard2 = { width: \"13rem\" }\r\n    var content = this.state.content;\r\n    var currentUser = this.state.currentUser;\r\n    var vendors = [];\r\n    Object.keys(content).forEach(function (key) {\r\n      vendors.push(content[key])\r\n    });\r\n    var settings = {\r\n      arrows: true,\r\n      variableWidth: true,\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToScroll: 3\r\n    };\r\n\r\n    return (\r\n      <>\r\n\r\n        {\r\n          currentUser ?\r\n            <>\r\n            </>\r\n            :\r\n            <>\r\n              <Carousel />\r\n              <Instructions />\r\n            </>\r\n        }\r\n\r\n        <div className=\"container\">\r\n          <br />\r\n          <br />\r\n          <Navbar className=\"\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <div className=\"home-location section-title-font text-white d-flex flex-row align-items-center\">\r\n              Delivering to: {\r\n                currentUser\r\n                  ?\r\n                  <NavDropdown style={{ color: 'white !important' }} title={this.state.location ? this.state.location : \"All\"} id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item onClick={() => this.updateLocation(\"Abuja\")}>Abuja</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item onClick={() => this.updateLocation(\"Covenant University\")}>Covenant University</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                  :\r\n                  <NavDropdown style={{ color: 'white !important' }} title={this.state.location ? this.state.location : \"All\"} id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item onClick={() => this.updateLocation(\"Abuja\")}>Abuja</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item onClick={() => this.updateLocation(\"Covenant University\")}>Covenant University</NavDropdown.Item>\r\n                  </NavDropdown>\r\n              }\r\n            </div>\r\n          </Navbar>\r\n          <br />\r\n          <Slider {...settings}>\r\n            {\r\n              vendors.map(m => {\r\n                return (\r\n                  <Card className=\"xx card-custom\" onClick={() => this.vendorRedirect(m.vendorname, m)} style={vendorCard} >\r\n                    <div className=\"hidden-o\">\r\n                      <Card.Img className=\"card-image-custom\" variant=\"top\" src={m.logo} />\r\n                    </div>\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {m.company_name + \", \" + m.company_branch}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {m.rating + \" - \" + m.location}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })\r\n            }\r\n\r\n          </Slider>\r\n\r\n          <Navbar className=\"\" expand=\"lg\" bg=\"transparent\">\r\n            <span className=\"home-location text-dark\" style={{ fontSize: \"2.5rem\" }}>30 Minutes Away</span>\r\n          </Navbar>\r\n          <div className=\"d-flex flex-row flex-wrap justify-content-between\">\r\n            {\r\n              vendors.slice(0, 10).map(m => {\r\n                return (\r\n                  <Card className=\"xx card-custom\" onClick={() => this.vendorRedirect(m.vendorname, m)} style={vendorCard2} >\r\n                    <div className=\"hidden-o\">\r\n                      <Card.Img className=\"card-image-custom\" variant=\"top\" src={m.logo} />\r\n                    </div>\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        {m.company_name + \", \" + m.company_branch}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        {m.rating + \" - \" + m.location}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport ScrollspyNav from \"react-scrollspy-nav\";\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nimport UserService from \"../services/user.service\"\r\nimport AuthService from \"../services/auth.service\"\r\n\r\nexport default class Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: JSON.parse(AuthService.getCurrentUser()),\r\n      content: \"\",\r\n      lastOrder: [],\r\n      orders: [],\r\n      scrollOffset: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserProfile(this.state.currentUser.id)\r\n      .then(response =>\r\n        this.setState({\r\n          orders: response.data.orders,\r\n          lastOrder: response.data.last_order,\r\n          orderRecords: response.data.order_records\r\n        })\r\n      )\r\n    window.addEventListener('scroll', this.handleScroll, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = (event) => {\r\n    const scrollTop = window.scrollY\r\n\r\n    this.setState({\r\n      scrollOffset: scrollTop\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const orders = this.state.orders\r\n    const lastOrder = Object.values(this.state.lastOrder)\r\n    let scrollSpyClass = \"profile-scrollspy\"\r\n    if (this.state.orderRecords !== null && this.state.orderRecords !== undefined) {\r\n      var orderRecords = Object.values(this.state.orderRecords)\r\n    }\r\n    if (this.state.scrollOffset > 1600) { }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className={scrollSpyClass}>\r\n          <ScrollspyNav\r\n            scrollTargetIds={[\"lastOrder\", /*\"timeline\",*/ \"orderHistory\", \"vendorHistory\", \"favourites\"]}\r\n            offset={100}\r\n            activeNavClass=\"scroll-active\"\r\n            scrollDuration=\"1000\"\r\n            headerBackground=\"true\">\r\n            <div className=\"d-flex flex-column justify-content-start\">\r\n              <a href=\"#lastOrder\" style={{ fontSize: \"1.5rem\" }} className=\"section-title-font scroll-inactive\">Last Order</a>\r\n              {/* <a href=\"#timeline\" style={{ fontSize: \"1.5rem\" }} className=\"section-title-font scroll-inactive\">Timeline</a> */}\r\n              <a href=\"#orderHistory\" style={{ fontSize: \"1.5rem\" }} className=\"section-title-font scroll-inactive\">Order History</a>\r\n              <a href=\"#vendorHistory\" style={{ fontSize: \"1.5rem\" }} className=\"section-title-font scroll-inactive\">Vendor History</a>\r\n              <a href=\"#favourites\" style={{ fontSize: \"1.5rem\" }} className=\"section-title-font scroll-inactive\">Favourites</a>\r\n              Scroll: {this.state.scrollOffset}\r\n            </div>\r\n          </ScrollspyNav>\r\n        </div>\r\n        <div className=\"d-flex flex-column align-items-end\">\r\n          <br />\r\n          <div className=\"profile-sections\" id=\"lastOrder\">\r\n            Your last order:\r\n                   <ListGroup>\r\n              {lastOrder === undefined && lastOrder === null && lastOrder === [] ? <></> :\r\n                <ListGroup>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <div>Vendor: {orderRecords !== undefined && orderRecords[orderRecords.length - 1][orderRecords[orderRecords.length - 1].length - 1]}</div>\r\n                        <div>Payment Method: {lastOrder[4]}</div>\r\n                        <div>Status: {lastOrder[6] === true ? \"Dispatched\" : \"Preparing\"}</div>\r\n                        <div>Time: {lastOrder[8]}</div>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <div>Paid: {lastOrder[5] !== undefined && lastOrder[5].toString()}</div>\r\n                        <div>Delivered: {lastOrder[7] !== undefined && lastOrder[7].toString()}</div>\r\n                        <div>Location: {lastOrder[3]}</div>\r\n                        <div>Price: {lastOrder[10]}</div>\r\n                      </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <ListGroup className=\"d-flex flex-row flex-wrap justify-content-start\">\r\n                      {orderRecords === undefined ? <></> :\r\n                        orderRecords[orderRecords.length - 1].slice(0, orderRecords[orderRecords.length - 1].length - 1).map(o => {\r\n                          return (\r\n                            <>\r\n                              <ListGroup.Item className=\"profile-order-list\">\r\n                                <Row>\r\n                                  <Col md={6}>\r\n                                    <div>{o.name}</div>\r\n                                    ₦{parseFloat(o.price).toFixed(2)}\r\n                                  </Col>\r\n                                  <Col md={5}><Image className=\"xxx profile-order-list-image\" src={o.sample} thumbnail /></Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            </>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ListGroup>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              }\r\n            </ListGroup>\r\n          </div>\r\n          <br />\r\n          {/* <div className=\"fake-height profile-sections\" id=\"timeline\">\r\n            Timeline\r\n            </div> */}\r\n          <br />\r\n          <div className=\"fake-height profile-sections\" id=\"orderHistory\">\r\n            Order History\r\n            <ListGroup>\r\n              {orders.slice(0, orders.length - 1)\r\n                .map((o, i) => {\r\n                  return (\r\n                    <>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={6}>\r\n                            <div>Vendor: {orderRecords[i][orderRecords[i].length - 1]}</div>\r\n                            <div>Payment Method: {o.payment_method}</div>\r\n                            <div>Status: {o.dispatched === true ? \"Dispatched\" : \"Preparing\"}</div>\r\n                            <div>Time: {orderRecords[i][0].created_at}</div>\r\n                          </Col>\r\n                          <Col md={6}>\r\n                            <div>Paid: {o.paid !== undefined && o.paid.toString()}</div>\r\n                            <div>Delivered: {o.delivered !== undefined && o.delivered.toString()}</div>\r\n                            <div>Location: {o.location}</div>\r\n                            <div>Price: {o.price}</div>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    </>\r\n                  )\r\n                })}\r\n            </ListGroup>\r\n          </div>\r\n          <br />\r\n          <div className=\"fake-height profile-sections\" id=\"vendorHistory\">\r\n            Recently Visited Vendors\r\n            </div>\r\n          <br />\r\n          <div className=\"fake-height profile-sections\" id=\"favourites\">\r\n            Favourites\r\n            </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\"\r\n\r\nimport ScrollspyNav from \"react-scrollspy-nav\";\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faShoppingCart, faMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport AuthService from \"../services/auth.service\"\r\nimport UserService from \"../services/user.service\"\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: JSON.parse(AuthService.getCurrentUser()),\r\n      content: \"\",\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      show: props.modal,\r\n      order: \"\",\r\n      target: \"\",\r\n      targetNumber: 0,\r\n      cart: [],\r\n      price: 0,\r\n      itemCount: 0\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.show !== nextProps.modal) {\r\n      this.setState({ show: nextProps.modal })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getVendor(this.props.match.params.vendorname)\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            content: response.data,\r\n            meals: response.data.meals,\r\n            tags: response.data.tags\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            content:\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString()\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  setModalShow(b) {\r\n    this.setState({\r\n      modalShow: b\r\n    })\r\n  }\r\n\r\n  toCheckout() {\r\n    this.props.updateCart(this.state.cart)    \r\n    this.props.history.push(`${this.props.match.params.vendorname}/checkout`)\r\n  }\r\n\r\n  getTotal = () => {\r\n    let a = 0, b = 0\r\n    for (let i = 0; i < this.state.cart.length; i++) {\r\n      a = a + parseInt(this.state.cart[i][2])\r\n      b = b + parseFloat(this.state.cart[i][3])\r\n    }\r\n\r\n    this.setState({\r\n      itemCount: a,\r\n      price: b\r\n    })\r\n  }\r\n\r\n  addToCart = (meal) => {\r\n    let arr = [meal.id, meal.name, this.state.targetNumber, (meal.price * this.state.targetNumber), meal.sample]\r\n    this.setState({\r\n      cart: this.state.cart.concat([arr])\r\n    })\r\n    this.close()\r\n  }\r\n\r\n  targetIncrement = () => {\r\n    this.setState({\r\n      targetNumber: this.state.targetNumber + 1\r\n    })\r\n  }\r\n\r\n  targetDecrement = () => {\r\n    this.setState({\r\n      targetNumber: this.state.targetNumber - 1\r\n    })\r\n  }\r\n\r\n  close = () => this.setState({ show: false, targetNumber: 0 });\r\n\r\n  render() {\r\n    const vendorCard = { width: \"22rem\", maxWidth: \"352px !important\", maxHeight: \"158px !important\", minWidth: \"22rem\" }\r\n    const content = this.state.content\r\n    var meals = content.meals\r\n    var tags = content.tags\r\n    const vendorHeader = {\r\n      background: `url(${content.logo}) center/cover no-repeat`\r\n    }\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.close} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n          <div className=\"container\">\r\n            <br />\r\n            {this.state.target.available ? <br></br> : \"Item not available\"}\r\n            <Row>\r\n              <Col md={7} className=\"d-flex flex-row align-items-center\"><div className=\"section-title-font display-4\">{this.state.target.name}</div></Col>\r\n              <Col md={5}><Image className=\"vendor-img\" src={this.state.target.sample} thumbnail /></Col>\r\n            </Row>\r\n            <br />\r\n            <p>{this.state.target.desc}</p>\r\n          </div>\r\n          <Modal.Footer>\r\n            <div className=\"container d-flex flex-row\">\r\n              <Button onClick={this.targetDecrement} className=\"order-button\" variant=\"light\"><FontAwesomeIcon icon={faMinus} /></Button>\r\n              <div className=\"order-box\">{this.state.targetNumber}</div>\r\n              <Button onClick={this.targetIncrement} className=\"order-button\" variant=\"light\"><FontAwesomeIcon icon={faPlus} /></Button>\r\n              <div className=\"order-price-box\">₦{(this.state.target.price * this.state.targetNumber) === 0 ? parseFloat(this.state.target.price).toFixed(2) : (this.state.target.price * this.state.targetNumber).toFixed(2)}</div>\r\n              {this.state.targetNumber === 0\r\n                ?\r\n                <Button variant=\"outline-dark\" disabled>Add To Cart</Button>\r\n                :\r\n                <Button variant=\"outline-dark\" onClick={() => this.addToCart(this.state.target)}>Add To Cart</Button>\r\n              }\r\n            </div>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <div className=\"vendor-header\" style={vendorHeader}>\r\n        </div>\r\n\r\n        <Navbar className=\"nav\" expand=\"lg\" bg=\"white\" sticky=\"top\" variant=\"light\" style={{ height: \"70px\" }}>\r\n          <div className=\"container text-capitalize\">\r\n            {tags ?\r\n              <>\r\n                <ScrollspyNav\r\n                  scrollTargetIds={tags}\r\n                  offset={-50}\r\n                  activeNavClass=\"scroll-active\"\r\n                  scrollDuration=\"1000\"\r\n                  headerBackground=\"true\">\r\n                  <div className=\"d-flex flex-row justify-content-start\">\r\n                    {\r\n                      tags.map(t => {\r\n                        return (\r\n                          <>\r\n                            <div className=\"btn\">\r\n                              <a href={\"#\" + t} className=\"scroll-inactive\">{t}</a>\r\n                            </div>\r\n                          </>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </ScrollspyNav>\r\n                <Dropdown onClick={this.getTotal} alignRight>\r\n                  <Dropdown.Toggle variant=\"\">\r\n                    <Badge badgeContent={this.state.cart.length} color=\"primary\">\r\n                      {<FontAwesomeIcon icon={faShoppingCart} style={{ fontSize: \"1.2rem\" }} />}\r\n                    </Badge>\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu className=\"order-dropdown\">\r\n                    <div className=\"section-title-font display-4\">Your Order</div>\r\n                    <Dropdown.Header>From {content.company_name}</Dropdown.Header>\r\n                    <Dropdown.Divider />\r\n                    <ListGroup className=\"order-list\">\r\n                      {\r\n                        this.state.cart.map(m => {\r\n                          return (\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col xs={1}>{m[2]}</Col>\r\n                                <Col>{m[1]}</Col>\r\n                                <Col xs={3}>₦{m[3].toFixed(2)}</Col>\r\n                                {/* <Col xs={1}><FontAwesomeIcon icon={faTimes} /> </Col> */}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ListGroup>\r\n                    <Button onClick={() => this.toCheckout()} className=\"order-dropdown-button\" variant=\"dark\" block>\r\n                      <Row>\r\n                        <Col xs={1}>{this.state.itemCount}</Col>\r\n                        <Col className=\"text-center\">Proceed to Checkout</Col>\r\n                        <Col className=\"text-left\" xs={3}>₦{(this.state.price).toFixed(2)}</Col>\r\n                      </Row>\r\n                    </Button>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </>\r\n              :\r\n              <>\r\n                Featured\r\n              </>\r\n            }\r\n          </div>\r\n        </Navbar>\r\n        <br />\r\n        <br />\r\n        <div className=\"container d-flex flex-column flex-wrap justify-content-start\" style={{ width: \"fit-content\" }}>\r\n          {\r\n            tags ?\r\n              <>\r\n                {\r\n                  tags.map(t => {\r\n                    return (\r\n                      <div id={t} style={{ marginBottom: \"2.5rem\" }}>\r\n                        <div className=\"home-location text-capitalize\" style={{ marginLeft: \"8px\" }}>\r\n                          {t}\r\n                        </div>\r\n                        <div className=\"d-flex flex-row flex-wrap justify-content-start\">\r\n                          {meals ?\r\n                            <>\r\n                              {\r\n                                meals.map(m => {\r\n                                  return (\r\n                                    <>\r\n                                      {(m.tag === t) ?\r\n                                        <Card className=\"vendor-card pointer\" onClick={() => this.setState({ show: true, target: m })}\r\n                                          border={m.available === true ? \"secondary\" : \"danger\"}\r\n                                          style={vendorCard}>\r\n                                          <div className=\"d-flex flex-row\">\r\n                                            <Col md={7} className=\"vendor-card-col\">\r\n                                              <Card.Body className=\"vendor-card-body\">\r\n                                                <Card.Title className=\"vendor-card-title\">{m.name}</Card.Title>\r\n                                                <Card.Text className=\"vendor-card-text\" >\r\n                                                  {m.desc}\r\n                                                </Card.Text>\r\n                                                <Card.Text className=\"vendor-card-text\" >\r\n                                                  ₦{parseFloat(m.price).toFixed(2)}\r\n                                                </Card.Text>\r\n                                              </Card.Body>\r\n                                            </Col>\r\n                                            <Col md={5} className=\"vendor-card-image d-flex flex-column justify-content-center\">\r\n                                              <Image className=\"vendor-img\" src={m.sample} thumbnail />\r\n                                            </Col>\r\n                                          </div>\r\n                                        </Card>\r\n                                        :\r\n                                        <>\r\n                                        </>\r\n                                      }\r\n                                    </>\r\n                                  );\r\n                                })\r\n                              }\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </>\r\n              :\r\n              <>\r\n              </>\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import axios from 'axios'\r\n\r\nimport authHeader from './auth-header'\r\n\r\nconst API_URL = 'https://xpresschow-api.herokuapp.com/api/v1/';\r\n// const API_URL = `http://localhost:3001/api/v1/`\r\n\r\nclass CheckoutService {\r\n  placeOrder(a, b, c, d, e, f, g) {\r\n    return axios.post(API_URL + 'orders',\r\n      {\r\n          user_id: a,\r\n          vendor_id: b,\r\n          location: c,\r\n          payment_method: d,\r\n          price: e,\r\n          paid: f,\r\n          orders: g\r\n      },\r\n      {\r\n        headers: authHeader()\r\n      }\r\n    )}\r\n}\r\n\r\nexport default new CheckoutService();","import React, { Component } from \"react\"\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nimport Form from \"react-validation/build/form\"\r\nimport Input from \"react-validation/build/input\"\r\n\r\nimport AuthService from \"../services/auth.service\"\r\nimport UserService from \"../services/user.service\"\r\nimport CheckoutService from \"../services/checkout.service\"\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentUser: JSON.parse(AuthService.getCurrentUser()),\r\n      vendor: \"\",\r\n      cart: this.props.cart,\r\n      total: 0,\r\n      itemCount: 0,\r\n      paymentMethod: \"po\",\r\n      location1: \"\",\r\n      location2: \"\",\r\n      price: 0,\r\n      placeOrderData: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if(this.state.cart === []) this.props.history.push('')\r\n    \r\n    UserService.getVendor(this.props.match.params.vendorname)\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            vendor: response.data\r\n          })\r\n        },\r\n        error => {\r\n          this.setState({\r\n            content:\r\n              (error.response && error.response.data) ||\r\n              error.message ||\r\n              error.toString()\r\n          })\r\n        }\r\n      )\r\n    this.getTotal()\r\n  }\r\n\r\n  getTotal = () => {\r\n    let a = 0, b = 0\r\n    for (let i = 0; i < this.props.cart.length; i++) {\r\n      a = a + parseInt(this.props.cart[i][2])\r\n      b = b + parseFloat(this.props.cart[i][3])\r\n    }\r\n\r\n    this.setState({\r\n      itemCount: a,\r\n      price: b\r\n    })\r\n  }\r\n\r\n  placeOrder = () => {\r\n    if (this.state.currentUser === null) {\r\n      this.props.showModal()\r\n    } else {\r\n      let cart = this.state.cart\r\n      cart.map(i => { i.pop() })\r\n\r\n      CheckoutService.placeOrder(\r\n        this.state.currentUser.id,\r\n        this.state.vendor.id,\r\n        (this.state.location1 + \" \" + this.state.location2),\r\n        this.state.paymentMethod,\r\n        this.state.price,\r\n        false,\r\n        cart\r\n      ).then(\r\n        resp => {\r\n          this.props.placeOrderData(resp.data)\r\n          this.props.history.push('/profile')\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onChangeLocation1 = (e) => {\r\n    this.setState({\r\n      location1: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeLocation2 = (e) => {\r\n    this.setState({\r\n      location2: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangePaymentMethod = (e) => {\r\n    this.setState({\r\n      paymentMethod: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // const vendor = this.state.vendor\r\n    // const order = []\r\n    // const vendorHeader = {\r\n    //   background: `url(${vendor.logo}) center/cover no-repeat`\r\n    // }\r\n    return (\r\n      <div className=\"container\">\r\n        {/* <div className=\"vendor-header\" style={vendorHeader}>\r\n        </div> */}\r\n        <br />\r\n        <Row>\r\n          <Col>\r\n            <div className=\"logo-font\">\r\n              Your Order\r\n            </div>\r\n            {\r\n              this.state.cart.map(m => {\r\n                return (\r\n                  <>\r\n                    <Row className=\"d-flex flex-row align-items-center\">\r\n                      <Col xs={1}>{m[2]}</Col>\r\n                      <Col style={{ maxWidth: \"70px\" }} className=\"xx xxx\"><Image className=\"checkout-order-thumbnail\" src={m[4]} thumbnail /></Col>\r\n                      <Col >{m[1]}</Col>\r\n                      <Col>{parseFloat(m[3]).toFixed(2)}</Col>\r\n                    </Row>\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Card border={(this.state.location1 === \"\") ? \"danger\" : \"success\"}>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <div>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"logo-font\">Location</Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <Form>\r\n                        <div className=\"form-group col-md-12\">\r\n                          <Input\r\n                            type=\"address-line1\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"locationLine1\"\r\n                            placeholder=\"Address Line 1\"\r\n                            value={this.state.location1}\r\n                            autocomplete=\"home street-address\"\r\n                            onChange={this.onChangeLocation1}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-12\">\r\n                          <Input\r\n                            type=\"address-line2\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"locationLine2\"\r\n                            placeholder=\"Address Line 2\"\r\n                            value={this.state.location2}\r\n                            onChange={this.onChangeLocation2}\r\n                          />\r\n                        </div>\r\n                      </Form>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </div>\r\n                <div>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"logo-font\">Payment Options</Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>\r\n                      <Form>\r\n                        <div className=\"container d-flex flex-row flex-wrap justify-content-between\">\r\n                          <div>\r\n                            <input\r\n                              type=\"radio\"\r\n                              className=\"checkout-radio-button\"\r\n                              value=\"po\"\r\n                              id=\"po\"\r\n                              checked={this.state.paymentMethod === \"po\"}\r\n                              onChange={this.onChangePaymentMethod}\r\n                            />\r\n                            <label htmlFor=\"po\" className=\"checkout-radio-label\">\r\n                              Pay Onine\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <input\r\n                              type=\"radio\"\r\n                              className=\"checkout-radio-button\"\r\n                              value=\"pod\"\r\n                              id=\"pod\"\r\n                              checked={this.state.paymentMethod === \"pod\"}\r\n                              onChange={this.onChangePaymentMethod}\r\n                            />\r\n                            <label htmlFor=\"pod\" className=\"checkout-radio-label\">\r\n                              Pay on Delivery\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <input\r\n                              type=\"radio\"\r\n                              className=\"checkout-radio-button\"\r\n                              value=\"cod\"\r\n                              id=\"cod\"\r\n                              checked={this.state.paymentMethod === \"cod\"}\r\n                              onChange={this.onChangePaymentMethod}\r\n                            />\r\n                            <label htmlFor=\"cod\" className=\"checkout-radio-label\">\r\n                              Card on Delivery\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </Form>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </div>\r\n                <div>\r\n                  <Accordion.Toggle as={Card.Header} eventKey=\"2\" className=\"logo-font\">Bill</Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body>\r\n                      <Card.Text>\r\n                        <div className=\"container\">\r\n                          <Row>\r\n                            <Col>Subtotal</Col>\r\n                            <Col className=\"text-right\">₦{parseFloat(this.state.price).toFixed(2)}</Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>Delivery Fee</Col>\r\n                            <Col className=\"text-right\">₦450.00</Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>Container Charges</Col>\r\n                            <Col className=\"text-right\">₦0.00</Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>Total</Col>\r\n                            <Col className=\"text-right\">₦{parseFloat(this.state.price + 450).toFixed(2)}</Col>\r\n                          </Row>\r\n                        </div>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </div>\r\n              </Accordion>\r\n              <Card.Footer>\r\n                {(this.state.location1 === \"\") ? <Button size=\"lg\" variant=\"success\" block disabled>Place Order</Button> : <Button size=\"lg\" variant=\"success\" onClick={this.placeOrder} block>Place Order</Button>}\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n             </>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeCredential = this.onChangeCredential.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      credential: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeCredential(e) {\r\n    this.setState({\r\n      credential: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.credential, this.state.password).then(\r\n        () => {\r\n          this.props.hideModal()\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card xx\">\r\n          <div className=\"card-body xx\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"btn btn-success disabled btn-lg btn-block\">Login With Google</div>\r\n            </div>\r\n            <br />\r\n            <div className=\"or-seperator text-center\">OR</div>\r\n            <br />\r\n            <Form onSubmit={this.handleLogin}\r\n              ref={c => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n\r\n              {this.state.message && (\r\n                <div className=\"form-group col-md-12\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-12\">\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"credential\"\r\n                  placeholder=\"Email\"\r\n                  value={this.state.credential}\r\n                  onChange={this.onChangeCredential}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-12\">\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control form-control-lg\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChangePassword}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-12\">\r\n                <button className=\"btn btn-outline-primary btn-lg btn-block\" disabled={this.state.loading} >\r\n                  {this.state.loading && (<span className=\"spinner-border spinner-border-sm\"></span>)}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n\r\n              <CheckButton style={{ display: \"none\" }}\r\n                ref={c => { this.checkBtn = c; }} readOnly\r\n              />\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone_number: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    this.setState({\r\n      first_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    this.setState({\r\n      last_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePhoneNumber(e) {\r\n    this.setState({\r\n      phone_number: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.first_name,\r\n        this.state.last_name,\r\n        this.state.phone_number,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card xx\">\r\n        <div className=\"card-body xx\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"btn btn-success disabled btn-lg btn-block\">Sign Up With Google</div>\r\n          </div>\r\n          <br />\r\n          <div className=\"text-center\">OR</div>\r\n          <br />\r\n\r\n          <Form onSubmit={this.handleRegister}\r\n            ref={c => { this.form = c; }} >\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group col-md-12\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!this.state.successful && (\r\n              <div className=\"row container\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <Input type=\"given-name\" className=\"form-control form-control-lg\" name=\"given-name\" placeholder=\"First Name\"\r\n                    value={this.state.first_name} onChange={this.onChangeFirstName} validations={[required]} />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6\">\r\n                  <Input type=\"family-name\" className=\"form-control form-control-lg\" name=\"family-name\" placeholder=\"Last Name\"\r\n                    value={this.state.last_name} onChange={this.onChangeLastName} validations={[required]} />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-12\">\r\n                  <Input type=\"email\" className=\"form-control form-control-lg\" name=\"email\" placeholder=\"Email\"\r\n                    value={this.state.email} onChange={this.onChangeEmail} validations={[required, email]} />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-12\">\r\n                  <Input type=\"password\" className=\"form-control form-control-lg\" name=\"password\" placeholder=\"Password\"\r\n                    value={this.state.password} onChange={this.onChangePassword} validations={[required, vpassword]} />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-12\">\r\n                  <Input type=\"tel\" className=\"form-control form-control-lg\" name=\"tel \" placeholder=\"Phone Number\"\r\n                    value={this.state.phone_number} onChange={this.onChangePhoneNumber} validations={[required]} />\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-12\">\r\n                  <button className=\"btn btn-outline-primary btn-lg btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => { this.checkBtn = c; }} readOnly\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Modal from 'react-bootstrap/Modal'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport './App.css'\n\nimport AuthService from \"./services/auth.service\";\n\nimport Home from \"./Home\"\nimport Profile from \"./components/profile.component\"\nimport Vendor from \"./components/vendor.component\"\nimport Test from \"./components/test.component\"\nimport Checkout from \"./components/checkout.component\"\nimport Footer from \"./pages/Footer\"\nimport LoginForm from './components/login.component'\nimport RegisterForm from './components/register.component'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n      show: props.modal,\n      cart: [],\n      placedOrderData: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.show !== nextProps.modal) {\n      this.setState({ show: nextProps.modal })\n    }\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: JSON.parse(user)\n      });\n    }\n  }\n\n  updateCart = (arr) => {\n    this.setState({\n      cart: arr\n    })\n  }\n\n  placeOrderData = (arr) => {\n    this.setState({\n      placedOrderData: arr,\n      cart: []\n    })\n  }\n\n  logOut() {\n    AuthService.logout();\n    window.history.pushState(\"\", \"\", \"/home\")\n    window.location.reload()\n  }\n\n  setModalShow(b) {\n    this.setState({\n      modalShow: b\n    })\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    let close = () => this.setState({ show: false });\n\n\n    return (\n      <div style={{ minHeight: \"100vh\", position: \"relative\" }}>\n        <Modal show={this.state.show} onHide={close} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n          <Tabs className=\"d-flex xx w-100 flex-row justify-content-center\" defaultActiveKey=\"loginForm\" id=\"uncontrolled-tab-example\">\n            <Tab className=\"xx\" eventKey=\"loginForm\" title=\"Login Form\">\n              <LoginForm hideModal={() => this.setState({ show: false })} />\n            </Tab>\n            <Tab className=\"xx\" eventKey=\"registerForm\" title=\"Register Form\">\n              <RegisterForm hideModal={() => this.setState({ show: false })}  showModal={() => this.setState({ show: true })}/>\n            </Tab>\n          </Tabs>\n        </Modal>\n        <Navbar collapseOnSelect className=\"nav\" expand=\"lg\" bg=\"white\" sticky=\"top\" variant=\"light\">\n          <div className=\"container\">\n            <Navbar.Brand className=\"logo-font xxx\" href=\"/\">XpressChow</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Nav.Link>\n                  <div className=\"btn btn-link no-border text-dark\">Help</div>\n                </Nav.Link>\n                {\n                  currentUser ?\n                    <>\n                      <NavDropdown title={\"Hi, \" + currentUser.first_name} className=\"btn btn-link xx text-light\">\n                        <Nav.Link className=\"xx\" href={\"/profile\"}>\n                          <button className=\"btn btn-link text-dark no-border\">Timeline</button>\n                        </Nav.Link>\n                        <Nav.Link className=\"xx\" href={\"/profile\"}>\n                          <button className=\"btn btn-link text-dark no-border\">My Account</button>\n                        </Nav.Link>\n                        <Nav.Link className=\"xx\" href={\"/profile\"}>\n                          <button className=\"btn btn-link text-dark no-border\">Address Book</button>\n                        </Nav.Link>\n                        <NavDropdown.Divider />\n                        <Nav.Link onClick={() => this.logOut()}>\n                          <button className=\"btn btn-link text-dark no-border\">Sign Out</button>\n                        </Nav.Link>\n                      </NavDropdown>\n                    </>\n                    :\n                    <Nav.Link onClick={() => this.setState({ show: true })}>\n                      <button className=\"btn btn-light no-border\">Login/Signup</button>\n                    </Nav.Link>\n                }\n              </Nav>\n            </Navbar.Collapse>\n          </div>\n        </Navbar>\n\n        <Router>\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} render={(props) =>\n              <Home {...props} />} />\n            <Route exact path=\"/profile\" render={(props) =>\n              <Profile {...props}\n                placedOrderData={this.state.placedOrderData}\n              />} />\n            <Route exact path=\"/vendor/:vendorname\" render={(props) =>\n              <Vendor {...props}\n                updateCart={this.updateCart}\n              />} />\n            <Route exact path=\"/vendor/:vendorname/checkout\" render={(props) =>\n              <Checkout {...props}\n                cart={this.state.cart}\n                placeOrderData={(a) => this.placeOrderData(a)}\n                showModal={() => this.setState({ show: true })}\n              />} />\n            <Route exact path=\"/test/:vendorname\" component={Test} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}